package bangfe.navigation{	import bangfe.ui.BasicButton;
	
	import flash.events.MouseEvent;
	
	import org.osflash.signals.Signal;
		/**	 * Navigation Item, used with the <code>NavigationGroup</code> 	 * @author Will Zadikian	 * 	 */	public class NavigationItem extends BasicButton implements INavigationItem	{		//--------------------------------------		//  PRIVATE VARIABLES		//--------------------------------------		private var _navigationGroup : NavigationGroup;		private var _selectRequesteSignal : Signal = new Signal(INavigationItem);		//--------------------------------------		//  PUBLIC METHODS		//--------------------------------------		override protected function addListeners():void		{			addEventListener(MouseEvent.CLICK, clickedHandler, false, 0, true)		}				override protected function removeListeners():void		{			removeEventListener(MouseEvent.CLICK, clickedHandler);		}				override public function destroy () : void		{			//Try to cleanup from the navigation group			if(_navigationGroup != null)_navigationGroup.unregisterNavigationItem(this);						super.destroy();		}				//--------------------------------------		//  ACCESSOR/MUTATOR METHODS		//--------------------------------------		/** @inheritDoc */		public function get navigationGroup () : NavigationGroup		{			return _navigationGroup;		}		public function set navigationGroup ( p_navigationGroup : NavigationGroup ) : void		{			if(_navigationGroup == p_navigationGroup)return;						if(_navigationGroup != null)_navigationGroup.unregisterNavigationItem(this);						_navigationGroup = p_navigationGroup;						if(_navigationGroup != null)_navigationGroup.registerNavigationItem(this);		}				/** @inheritDoc */		public function get selectRequesteSignal () : Signal 
		{
			return _selectRequesteSignal;
		}				//--------------------------------------		//  HANDLER METHODS		//--------------------------------------		private function clickedHandler ( e : MouseEvent ) : void		{			_selectRequesteSignal.dispatch(this);		}	}}